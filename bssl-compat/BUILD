# load("@rules_foreign_cc//foreign_cc:defs.bzl", "cmake")
# 
# filegroup(
#     name = "srcs",
#     srcs = glob(["**"]),
# )
# 
# licenses(["notice"])  # Apache 2
# 
# cmake(
#     name = "bssl-compat",
#     lib_source = ":srcs",
#     out_shared_libs = [],
#     out_static_libs = ["libbssl-compat.a"],
#     visibility = ["//visibility:public"],
#     generate_crosstool_file = False,
#     env = { "Clang_ROOT" : "/usr/lib/llvm" },
# 
#     build_args = [ "-j" ]
# )
# 

load(
    "//bazel:envoy_build_system.bzl",
    "envoy_cc_library",
    "envoy_package",
)

envoy_package()

genrule(
    name = "ossl_gen",
    srcs = [
        "//bssl-compat/prefixer:prefixer",
        "@clang//:clang_lib"
    ],
    tools = [
        "//bssl-compat/prefixer:prefixer",
    ],
    outs = [
        "source/ossl.c",
        "include/ossl.h",
        "include/ossl/openssl/err.h",
    ],
    cmd = """ \
      LD_LIBRARY_PATH=/opt/llvm/lib/ \
      bazel-out/k8-fastbuild/bin/bssl-compat/prefixer/prefixer \
      --src-path /usr/include/ \
      --src-incl \"openssl/*.h\" \
      --src-skip openssl/asn1_mac.h \
      --src-skip \"openssl/opensslconf-*.h\" \
      --verbose \
      --output $(RULEDIR) \
      --prefix ossl \
      """,
)
      #$(locations //bssl-compat/prefixer:prefixer)


genrule(
    name = "bssl_gen_headers",
    tools = [
        "//bssl-compat:tools/uncomment.sh",
        "//bssl-compat:tools/generate.h.sh",
    ],
    srcs = glob([
      "third_party/boringssl/src/include/openssl/*.h",
      "patch/**",
      ]),
    outs = [
      "include/openssl/aead.h",
      "include/openssl/aes.h",
      "include/openssl/arm_arch.h",
      "include/openssl/asn1.h",
      "include/openssl/asn1_mac.h",
      "include/openssl/asn1t.h",
      "include/openssl/base64.h",
      "include/openssl/base.h",
      "include/openssl/bio.h",
      "include/openssl/blake2.h",
      "include/openssl/blowfish.h",
      "include/openssl/bn.h",
      "include/openssl/buffer.h",
      "include/openssl/buf.h",
      "include/openssl/bytestring.h",
      "include/openssl/cast.h",
      "include/openssl/chacha.h",
      "include/openssl/cipher.h",
      "include/openssl/cmac.h",
      "include/openssl/conf.h",
      "include/openssl/cpu.h",
      "include/openssl/crypto.h",
      "include/openssl/curve25519.h",
      "include/openssl/des.h",
      "include/openssl/dh.h",
      "include/openssl/digest.h",
      "include/openssl/dsa.h",
      "include/openssl/dtls1.h",
      "include/openssl/ecdh.h",
      "include/openssl/ecdsa.h",
      "include/openssl/ec.h",
      "include/openssl/ec_key.h",
      "include/openssl/engine.h",
      "include/openssl/e_os2.h",
      "include/openssl/err.h",
      "include/openssl/evp_errors.h",
      "include/openssl/evp.h",
      "include/openssl/ex_data.h",
      "include/openssl/hkdf.h",
      "include/openssl/hmac.h",
      "include/openssl/hpke.h",
      "include/openssl/hrss.h",
      "include/openssl/is_boringssl.h",
      "include/openssl/kdf.h",
      "include/openssl/lhash.h",
      "include/openssl/md4.h",
      "include/openssl/md5.h",
      "include/openssl/mem.h",
      "include/openssl/nid.h",
      "include/openssl/objects.h",
      ],
    cmd = """
      #!/bin/bash
      for header in $(SRCS); do
        if [[ "$$header" != "*/patch/*" ]]; then
          $(location tools/generate.h.sh) $(location tools/uncomment.sh) $$header "./include/openssl/$${header##*/}" $(RULEDIR)
        fi
      done
      """, # TODO: the condition in cmd does not work
    visibility = ["//visibility:public"],
)

genrule(
    name = "bssl_gen_sources",
    tools = [
        "//bssl-compat:bssl_gen_headers",
        "//bssl-compat:tools/generate.c.sh",
    ],
    srcs = glob([
      "third_party/boringssl/src/include/**"
      ]),
    outs = [
      "source/ASN1_IA5STRING_free.c",
      "source/ASN1_IA5STRING_new.c",
      "source/ASN1_INTEGER_free.c",
      "source/ASN1_INTEGER_new.c",
      "source/ASN1_INTEGER_to_BN.c",
      "source/ASN1_OBJECT_free.c",
      "source/ASN1_STRING_data.c",
      "source/ASN1_STRING_free.c",
      "source/ASN1_STRING_get0_data.c",
      "source/ASN1_STRING_length.c",
      "source/ASN1_STRING_set.c",
      "source/ASN1_STRING_to_UTF8.c",
      "source/ASN1_TIME_adj.c",
      "source/ASN1_TIME_diff.c",
      "source/ASN1_TIME_new.c",
      "source/ASN1_TIME_set.c",
      "source/BIO_clear_flags.c",
      "source/BIO_clear_retry_flags.c",
      "source/BIO_ctrl.c",
      "source/BIO_ctrl_get_read_request.c",
      "source/BIO_ctrl_get_write_guarantee.c",
      "source/BIO_get_data.c",
      "source/BIO_get_init.c",
      "source/BIO_get_mem_ptr.c",
      "source/BIO_get_shutdown.c",
      "source/BIO_new_connect.c",
      "source/BIO_new_mem_buf.c",
      "source/BIO_puts.c",
      "source/BIO_read.c",
      "source/BIO_reset.c",
      "source/BIO_get_mem_data.c",
      "source/BIO_set_data.c",
      "source/BIO_set_init.c",
      "source/BIO_set_mem_eof_return.c",
      "source/BIO_set_retry_read.c",
      "source/BIO_set_retry_write.c",
      "source/BIO_set_shutdown.c",
      "source/BIO_should_read.c",
      "source/BIO_should_retry.c",
      "source/BIO_should_write.c",
      "source/BIO_shutdown_wr.c",
      "source/BIO_up_ref.c",
      "source/BIO_free_all.c",
      "source/BIO_write.c",
      "source/BN_add_word.c",
      "source/BN_dup.c",
      "source/BN_free.c",
      "source/BN_hex2bn.c",
      "source/BN_new.c",
      "source/BN_num_bits.c",
      "source/BN_set_word.c",
      "source/BN_ucmp.c",
      "source/CRYPTO_memcmp.c",
      "source/d2i_PKCS12_bio.c",
      "source/d2i_SSL_SESSION.c",
      "source/d2i_X509.c",
      "source/DTLS_method.c",
      "source/EC_GROUP_get_curve_name.c",
      "source/EC_GROUP_get_degree.c",
      "source/EC_GROUP_get0_order.c",
      "source/EC_KEY_new_by_curve_name.c",
      "source/EC_KEY_free.c",
      "source/EC_KEY_get0_group.c",
      "source/ECDSA_size.c",
      "source/ECDSA_SIG_free.c",
      "source/ECDSA_SIG_get0.c",
      "source/ECDSA_SIG_new.c",
      "source/ECDSA_SIG_set0.c",
      "source/ERR_clear_error.c",
      "source/ERR_print_errors.c",
      "source/ERR_print_errors_fp.c",
      "source/ERR_put_error.c",
      "source/EVP_aes_256_cbc.c",
      "source/EVP_aes_128_gcm.c",
      "source/EVP_aes_256_gcm.c",
      "source/EVP_CIPHER_CTX_free.c",
      "source/EVP_CIPHER_CTX_new.c",
      "source/EVP_CIPHER_CTX_ctrl.c",
      "source/EVP_CIPHER_block_size.c",
      "source/EVP_CIPHER_iv_length.c",
      "source/EVP_CIPHER_key_length.c",
      "source/EVP_DecryptFinal_ex.c",
      "source/EVP_DecryptInit_ex.c",
      "source/EVP_DecryptUpdate.c",
      "source/EVP_DigestFinal.c",
      "source/EVP_DigestFinal_ex.c",
      "source/EVP_DigestInit.c",
      "source/EVP_DigestInit_ex.c",
      "source/EVP_DigestSignInit.c",
      "source/EVP_DigestSignUpdate.c",
      "source/EVP_DigestUpdate.c",
      "source/EVP_DigestVerify.c",
      "source/EVP_DigestVerifyUpdate.c",
      "source/EVP_DigestVerifyInit.c",
      "source/EVP_EncryptFinal_ex.c",
      "source/EVP_EncryptInit_ex.c",
      "source/EVP_EncryptUpdate.c",
      "source/EVP_MD_CTX_copy_ex.c",
      "source/EVP_MD_CTX_create.c",
      "source/EVP_MD_CTX_free.c",
      "source/EVP_MD_CTX_new.c",
      "source/EVP_MD_CTX_destroy.c",
      "source/EVP_MD_size.c",
      "source/EVP_MD_type.c",
      "source/EVP_md4.c",
      "source/EVP_md5.c",
      "source/EVP_md5_sha1.c",
      "source/EVP_PKEY_assign_EC_KEY.c",
      "source/EVP_PKEY_assign_RSA.c",
      "source/EVP_PKEY_cmp.c",
      "source/EVP_PKEY_CTX_set_rsa_mgf1_md.c",
      "source/EVP_PKEY_CTX_set_rsa_padding.c",
      "source/EVP_PKEY_free.c",
      "source/EVP_PKEY_up_ref.c",
      "source/EVP_PKEY_get_raw_public_key.c",
      "source/EVP_PKEY_new.c",
      "source/EVP_PKEY_set1_RSA.c",
      "source/EVP_sha1.c",
      "source/EVP_sha224.c",
      "source/EVP_sha256.c",
      "source/EVP_sha384.c",
      "source/EVP_sha512.c",
      "source/GENERAL_NAME_set0_value.c",
      "source/HMAC.c",
      "source/HMAC_CTX_free.c",
      "source/HMAC_CTX_new.c",
      "source/HMAC_Final.c",
      "source/HMAC_Update.c",
      "source/i2d_SSL_SESSION.c",
      "source/MD5.c",
      "source/OBJ_txt2obj.c",
      "source/OPENSSL_free.c",
      "source/OPENSSL_malloc.c",
      "source/OPENSSL_memdup.c",
      "source/OPENSSL_realloc.c",
      "source/OPENSSL_init_ssl.c",
      "source/PEM_bytes_read_bio.c",
      "source/PKCS12_free.c",
      "source/RSA_bits.c",
      "source/RSA_check_key.c",
      "source/RSA_free.c",
      "source/RSA_get0_crt_params.c",
      "source/RSA_get0_factors.c",
      "source/RSA_get0_key.c",
      "source/RSA_new.c",
      "source/RSA_set0_crt_params.c",
      "source/RSA_set0_factors.c",
      "source/RSA_set0_key.c",
      "source/RSA_sign.c",
      "source/RSA_size.c",
      "source/RSA_verify.c",
      "source/SHA1.c",
      "source/SHA224.c",
      "source/SHA256.c",
      "source/SHA384.c",
      "source/SHA512.c",
      "source/SSL_accept.c",
      "source/SSL_alert_desc_string_long.c",
      "source/SSL_CIPHER_get_auth_nid.c",
      "source/SSL_CIPHER_get_cipher_nid.c",
      "source/SSL_CIPHER_get_digest_nid.c",
      "source/SSL_CIPHER_get_id.c",
      "source/SSL_CIPHER_get_name.c",
      "source/SSL_CIPHER_standard_name.c",
      "source/SSL_connect.c",
      "source/SSL_CTX_add_extra_chain_cert.c",
      "source/SSL_CTX_check_private_key.c",
      "source/SSL_CTX_set_tmp_ecdh.c",
      "source/SSL_get0_next_proto_negotiated.c",
      "source/SSL_CTX_free.c",
      "source/SSL_CTX_get_cert_store.c",
      "source/SSL_CTX_set_cert_store.c",
      "source/SSL_CTX_get_ex_data.c",
      "source/SSL_CTX_get_options.c",
      "source/SSL_CTX_get_verify_mode.c",
      "source/SSL_CTX_get0_certificate.c",
      "source/SSL_CTX_get0_param.c",
      "source/SSL_CTX_load_verify_locations.c",
      "source/SSL_CTX_new.c",
      "source/SSL_CTX_set_alpn_protos.c",
      "source/SSL_CTX_set_cipher_list.c",
      "source/SSL_CTX_set_ex_data.c",
      "source/SSL_CTX_set_max_proto_version.c",
      "source/SSL_CTX_set_min_proto_version.c",
      "source/SSL_CTX_set_options.c",
      "source/SSL_CTX_set_session_cache_mode.c",
      "source/SSL_CTX_set_session_id_context.c",
      "source/SSL_CTX_set_timeout.c",
      "source/SSL_CTX_set_tlsext_servername_arg.c",
      "source/SSL_CTX_set1_curves_list.c",
      "source/SSL_CTX_set1_sigalgs_list.c",
      "source/SSL_CTX_use_certificate_chain_file.c",
      "source/SSL_CTX_use_certificate_file.c",
      "source/SSL_CTX_use_PrivateKey_file.c",
      "source/SSL_do_handshake.c",
      "source/SSL_free.c",
      "source/SSL_get_certificate.c",
      "source/SSL_get_current_cipher.c",
      "source/SSL_get_error.c",
      "source/SSL_get_ex_data.c",
      "source/SSL_get_ex_data_X509_STORE_CTX_idx.c",
      "source/SSL_get_peer_certificate.c",
      "source/SSL_get_session.c",
      "source/SSL_get_SSL_CTX.c",
      "source/SSL_get_version.c",
      "source/SSL_get_wbio.c",
      "source/SSL_get_rbio.c",
      "source/SSL_get0_alpn_selected.c",
      "source/SSL_get1_session.c",
      "source/SSL_is_server.c",
      "source/SSL_is_init_finished.c",
      "source/SSL_new.c",
      "source/SSL_read.c",
      "source/SSL_select_next_proto.c",
      "source/SSL_SESSION_free.c",
      "source/SSL_SESSION_get_id.c",
      "source/SSL_SESSION_is_resumable.c",
      "source/SSL_session_reused.c",
      "source/SSL_SESSION_set_protocol_version.c",
      "source/SSL_SESSION_up_ref.c",
      "source/SSL_set_accept_state.c",
      "source/SSL_set_alpn_protos.c",
      "source/SSL_set_bio.c",
      "source/SSL_set_cipher_list.c",
      "source/SSL_set_connect_state.c",
      "source/SSL_set_ex_data.c",
      "source/SSL_set_fd.c",
      "source/SSL_set_quiet_shutdown.c",
      "source/SSL_set_session.c",
      "source/SSL_set_session_id_context.c",
      "source/SSL_set_SSL_CTX.c",
      "source/SSL_set_tlsext_host_name.c",
      "source/SSL_set0_rbio.c",
      "SOUrce/SSL_set0_wbio.c",
      "source/SSL_set1_curves_list.c",
      "source/SSL_state_string_long.c",
      "source/SSL_state_string.c",
      "source/SSL_shutdown.c",
      "source/SSL_version.c",
      "source/SSL_write.c",
      "source/TLS_client_method.c",
      "source/TLS_method.c",
      "source/TLS_server_method.c",
      "source/X509_add1_ext_i2d.c",
      "source/X509_alias_get0.c",
      "source/X509_cmp.c",
      "source/X509_CRL_cmp.c",
      "source/X509_CRL_dup.c",
      "source/X509_CRL_get_issuer.c",
      "source/X509_CRL_free.c",
      "source/X509_CRL_up_ref.c",
      "source/X509_digest.c",
      "source/X509_free.c",
      "source/X509_get_ext.c",
      "source/X509_get_ext_by_OBJ.c",
      "source/X509_get_ext_d2i.c",
      "source/X509_get_extension_flags.c",
      "source/X509_get_issuer_name.c",
      "source/X509_get_key_usage.c",
      "source/X509_get_pathlen.c",
      "source/X509_get_pubkey.c",
      "source/X509_get_serialNumber.c",
      "source/X509_get_subject_name.c",
      "source/X509_get_X509_PUBKEY.c",
      "source/X509_get0_notAfter.c",
      "source/X509_get0_notBefore.c",
      "source/X509_getm_notAfter.c",
      "source/X509_getm_notBefore.c",
      "source/X509_INFO_free.c",
      "source/X509_NAME_add_entry_by_txt.c",
      "source/X509_NAME_cmp.c",
      "source/X509_NAME_digest.c",
      "source/X509_NAME_dup.c",
      "source/X509_NAME_entry_count.c",
      "source/X509_NAME_ENTRY_get_data.c",
      "source/X509_NAME_ENTRY_set.c",
      "source/X509_NAME_free.c",
      "source/X509_NAME_get_entry.c",
      "source/X509_NAME_get_index_by_NID.c",
      "source/X509_NAME_new.c",
      "source/X509_NAME_oneline.c",
      "source/X509_NAME_print_ex.c",
      "source/X509_new.c",
      "source/X509_PUBKEY_get.c",
      "source/X509_set_pubkey.c",
      "source/X509_set_version.c",
      "source/X509_STORE_add_cert.c",
      "source/X509_STORE_add_crl.c",
      "source/X509_STORE_CTX_free.c",
      "source/X509_STORE_CTX_get_current_cert.c",
      "source/X509_STORE_CTX_get_error.c",
      "source/X509_STORE_CTX_get_error_depth.c",
      "source/X509_STORE_CTX_get_ex_data.c",
      "source/X509_STORE_CTX_get0_cert.c",
      "source/X509_STORE_CTX_get0_param.c",
      "source/X509_STORE_CTX_new.c",
      "source/X509_STORE_CTX_set_default.c",
      "source/X509_STORE_CTX_set_error.c",
      "source/X509_STORE_CTX_set_flags.c",
      "source/X509_STORE_free.c",
      "source/X509_STORE_get0_param.c",
      "source/X509_STORE_load_locations.c",
      "source/X509_STORE_new.c",
      "source/X509_STORE_up_ref.c",
      "source/X509_STORE_set_flags.c",
      "source/X509_STORE_set_get_crl.c",
      "source/X509_STORE_set_check_crl.c",
      "source/X509_STORE_set_verify_cb.c",
      "source/X509_up_ref.c",
      "source/X509_verify.c",
      "source/X509_verify_cert.c",
      "source/X509_VERIFY_PARAM_clear_flags.c",
      "source/X509_VERIFY_PARAM_get_flags.c",
      "source/X509_VERIFY_PARAM_set_flags.c",
      "source/X509_VERIFY_PARAM_set1.c",
      ],
    cmd = """
      for c_file in $(OUTS); do
        file=$${c_file##*/}
        $(location tools/generate.c.sh) $${file%.c} $$c_file
      done
      """,
    visibility = ["//visibility:public"],
)



cc_library(
	name = "bssl-compat",
  linkstatic = True,
	srcs = [
      "source/ASN1_TIME_free.cc",
      "source/BASIC_CONSTRAINTS_free.cc",
      "source/BASIC_CONSTRAINTS_new.cc",
      "source/bio_meth_map.cpp",
      "source/BIO_free.cc",
      "source/BIO_mem_contents.cc",
      "source/BIO_new_bio_pair.cc",
      "source/BIO_new.cc",
      "source/BIO_pending.cc",
      "source/BIO_printf.cc",
      "source/BIO_read_asn1.c",
      "source/BIO_s_mem.cc",
      "source/BIO_s_socket.cc",
      "source/BIO_snprintf.cc",
      "source/BIO_vfree.cc",
      "source/BN_cmp_word.cc",
      "source/BN_bn2hex.cc",
      "source/BN_bin2bn.cc",
      "source/c2i_ASN1_INTEGER.cc",
      "source/CRYPTO_BUFFER_free.c",
      "source/CRYPTO_BUFFER.h",
      "source/CRYPTO_BUFFER_new.c",
      "source/d2i_GENERAL_NAME.cc",
      "source/ECDSA_do_verify.cc",
      "source/ECDSA_sign.cc",
      "source/EC_KEY_check_fips.cc",
      "source/EC_KEY_parse_private_key.cc",
      "source/EC_KEY_set_public_key_affine_coordinate.cc",
      "source/ED25519_verify.cc",
      "source/err.cc",
      "source/EVP_DecodeBase64.c",
      "source/EVP_DecodedLength.c",
      "source/EVP_DigestVerifyFinal.cc",
      "source/EVP_DigestSignFinal.cc",
      "source/EVP_MD_CTX_move.cc",
      "source/EVP_parse_public_key.cc",
      "source/EVP_PKEY_get0_EC_KEY.cc",
      "source/EVP_PKEY_get0_RSA.cc",
      "source/EVP_PKEY_get1_EC_KEY.cc",
      "source/EVP_PKEY_get1_RSA.cc",
      "source/EVP_PKEY_id.cc",
      "source/ext_SSL_get_all_async_fds.c",
      "source/FIPS_mode.cc",
      "source/GENERAL_NAME_free.cc",
      "source/GENERAL_NAME_new.cc",
      "source/GENERAL_NAMES_free.cc",
      "source/GENERAL_NAMES_new.cc",
      "source/GENERAL_SUBTREE_free.cc",
      "source/GENERAL_SUBTREE_new.cc",
      "source/HMAC_Init_ex.cc",
      "source/i2d_X509.c",
      "source/i2d_X509_PUBKEY.cc",
      "source/iana_2_ossl_names.cc",
      "source/internal.h",
      "source/log.c",
      "source/log.h",
      "source/NAME_CONSTRAINTS_free.cc",
      "source/NAME_CONSTRAINTS_new.cc",
      "source/ossl.c",
      "source/override.h",
      "source/override.cc",
      "source/PEM_read_bio_PrivateKey.cc",
      "source/PEM_read_bio_RSAPrivateKey.c",
      "source/PEM_read_bio_X509.cc",
      "source/PEM_read_bio_X509_AUX.cc",
      "source/PEM_read_bio_X509_CRL.cc",
      "source/PEM_read_bio_PUBKEY.cc",
      "source/PEM_write_bio_X509.cc",
      "source/PEM_X509_INFO_read_bio.cc",
      "source/PKCS12_get_key_and_certs.cc",
      "source/PKCS12_parse.cc",
      "source/PKCS12_verify_mac.cc",
	],
	hdrs = [],
	deps = [
    "//bssl-compat:ossl_gen",
    "@openssl//:openssl-lib",
      ],
)
alias(
    name = "crypto",
    actual = ":bssl-compat",
    visibility = ["//visibility:public"],
)

alias(
    name = "ssl",
    actual = ":bssl-compat",
    visibility = ["//visibility:public"],
)

